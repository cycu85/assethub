{% extends 'base.html.twig' %}

{% block title %}Pracownicy - {{ app_name() }}{% endblock %}
{% block page_title %}Zarządzanie pracownikami{% endblock %}

{% block breadcrumb %}
    <li class="breadcrumb-item"><a href="/">Strona główna</a></li>
    <li class="breadcrumb-item"><a href="/admin">Administracja</a></li>
    <li class="breadcrumb-item active">Pracownicy</li>
{% endblock %}

{% block content %}
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex align-items-center">
                    <h5 class="card-title mb-0 flex-grow-1">Lista pracowników</h5>
                    <div class="flex-shrink-0">
                        {% if can_edit_full %}
                        <a href="{{ path('admin_users_new') }}" class="btn btn-success add-btn">
                            <i class="ri-add-line align-bottom me-1"></i> Dodaj pracownika
                        </a>
                        {% endif %}
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-sm-12 col-md-6">
                        <!-- Puste miejsce po lewej -->
                    </div>
                    <div class="col-sm-12 col-md-6">
                        <div class="d-flex align-items-center justify-content-end">
                            <label for="page-size-select" class="form-label me-2 mb-0">Pokaż:</label>
                            <select id="page-size-select" class="form-select form-select-sm" style="width: auto;">
                                <option value="10" selected>10</option>
                                <option value="25">25</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="250">250</option>
                                <option value="500">500</option>
                                <option value="1000">1000</option>
                                <option value="0">Wszystkie</option>
                            </select>
                            <span class="ms-2 text-muted">wierszy</span>
                        </div>
                    </div>
                </div>
                <div id="table-gridjs"></div>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block head_css %}
{{ parent() }}
<!-- gridjs css -->
<link href="{{ asset('assets/libs/gridjs/theme/mermaid.min.css') }}" rel="stylesheet" type="text/css" />
<style>
.gridjs-table {
    border: none !important;
}
.gridjs-th {
    background-color: #f8f9fa !important;
    border: none !important;
    color: #495057 !important;
    font-weight: 600 !important;
}
.gridjs-td {
    border: none !important;
    border-bottom: 1px solid #dee2e6 !important;
}
.gridjs-sort {
    color: #495057 !important;
}
.gridjs-sort::after {
    font-family: "Font Awesome 5 Free" !important;
    font-weight: 900 !important;
}
.gridjs-sort-asc::after {
    content: "\f0de" !important;
}
.gridjs-sort-desc::after {
    content: "\f0dd" !important;
}
.gridjs-td {
    white-space: nowrap !important;
}
.gridjs-td:nth-child(4),
.gridjs-td:nth-child(6) {
    white-space: normal !important;
    word-wrap: break-word !important;
    word-break: break-word !important;
    max-width: 150px !important;
}
/* Fix search input styling */
.gridjs-search-input {
    padding-left: 35px !important;
}
.gridjs-search {
    position: relative !important;
}
.gridjs-search::before {
    content: "\f002" !important;
    font-family: "Font Awesome 5 Free" !important;
    font-weight: 900 !important;
    position: absolute !important;
    left: 12px !important;
    top: 50% !important;
    transform: translateY(-50%) !important;
    color: #6c757d !important;
    z-index: 10 !important;
    pointer-events: none !important;
}
</style>
{% endblock %}

{% block javascript %}
<!-- gridjs js -->
<script src="{{ asset('assets/libs/gridjs/gridjs.umd.js') }}"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Prepare data for GridJS
    const usersData = [
        {% for user in users %}
        [
            {% if can_edit %}
            gridjs.html(`<a href="{{ path('admin_users_edit', {id: user.id}) }}" class="text-decoration-none fw-medium text-primary">{{ user.firstName }} {{ user.lastName }}</a>`),
            {% else %}
            "{{ user.firstName }} {{ user.lastName }}",
            {% endif %}
            "{{ user.email|default('—') }}",
            "{{ user.phoneNumber|default('—') }}",
            "{{ user.position|default('—') }}",
            "{{ user.supervisor ? user.supervisor.fullName : '—' }}",
            "{{ user.department ? departments_map[user.department]|default(user.department) : '—' }}",
            "{{ user.branch ? branches_map[user.branch]|default(user.branch) : '—' }}",
            gridjs.html("{% if user.status %}<span class='badge bg-info-subtle text-info'>{{ statuses_map[user.status]|default(user.status) }}</span>{% else %}<span class='text-muted'>—</span>{% endif %}")
        ]{% if not loop.last %},{% endif %}
        {% endfor %}
    ];

    let currentGrid;

    function createGrid(pageSize = 10) {
        const gridConfig = {
            columns: [
                {
                    name: 'Imię i nazwisko',
                    width: '180px'
                },
                {
                    name: 'Email',
                    width: '180px'
                },
                {
                    name: 'Telefon',
                    width: '120px'
                },
                {
                    name: 'Stanowisko',
                    width: '150px'
                },
                {
                    name: 'Przełożony',
                    width: '150px'
                },
                {
                    name: 'Dział',
                    width: '120px'
                },
                {
                    name: 'Oddział',
                    width: '120px'
                },
                {
                    name: 'Status',
                    width: '100px'
                }
            ],
            data: usersData,
            sort: true,
            search: true,
            className: {
                table: 'table table-borderless table-centered align-middle table-nowrap mb-0',
                th: 'text-muted',
                td: 'text-body'
            },
            language: {
                search: {
                    placeholder: 'Szukaj...'
                },
                pagination: {
                    previous: 'Poprzednia',
                    next: 'Następna',
                    showing: 'Pokazane',
                    results: () => 'wyniki'
                }
            }
        };

        // Add pagination only if pageSize is not 0 (show all)
        if (pageSize > 0) {
            gridConfig.pagination = {
                limit: pageSize,
                summary: true
            };
        }

        // Clear existing grid
        if (currentGrid) {
            currentGrid.destroy();
        }

        // Create new grid
        currentGrid = new gridjs.Grid(gridConfig).render(document.getElementById("table-gridjs"));
    }

    // Initialize grid
    createGrid(10);

    // Handle page size change
    document.getElementById('page-size-select').addEventListener('change', function() {
        const pageSize = parseInt(this.value);
        createGrid(pageSize);
    });
});
</script>
{% endblock %}